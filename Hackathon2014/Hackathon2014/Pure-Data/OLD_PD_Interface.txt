Pure Data Interface

Master List of Receivers
Last Updated 10/24/14


Interface Patch:

	Main.pd - All notes go through main synth with global settings

	Note.pd - Single synth unit with its own settings for each note. 
				Currently each has own [dac~] objects, no "master" settings.


Formula for scaling slider values (if sliders go from .1 to 1):

	max_value * abs(log(abs(value - 1.1)) / log(scale_factor))



Documentation Format:
Functionality: [receiver name] message to send (comment/restriction)

Example: [$0-chorus_on] 1 / 0 (on / off)
Meaning: Turn the chorus module on or off by sending a 1 or 0 to $0-chorus_on



TEST:

	[$0-test] bang (Plays Middle C)

	Plays a brief test tone.


///////////////////////////////////////////////////////////////////////////////


MIDI:



Create Note with Fixed Duration: 

	[$0-makenote] list{ float float } (Note Value, Duration in ms)

	Note values should be integers from 0 to 127.
	Duration should be an integer - time in milliseconds.

Manually Trigger / Turn off a note:

	[$0-note] list{ float float } (Note Value, Velocity)

	Both values should be integers from 0 to 127.
	A velocity value != 0 triggers note on.
	A velocity value == 0 triggers note off.

Pitch Bend:

	[$0-pitchbend]       float (0 - 127, MIDI Protocol)
	[$0-pitchbend_range] float (Range is in MIDI notes)

	The pitchbend with shift the pitch in real time, up or down.
	It uses the standard MIDI protocol where 64 = center (no shift).
	Shifting up from there increases the pitch, and below decreases.

	The range is in terms of midi notes - a range of 1 will shift it
	+/- 1 semitone at pitchbend values of 127/0, respectively.


Turn off All Notes Immediately:

	[$0-flush] bang

	Sends a note off message for every note. 
	Good for stuck notes and effective muting.


///////////////////////////////////////////////////////////////////////////////


AUDIO:

	Effects are chained in the order written here.

MASTER CONTROLS:

Change Waveform:

	[$0-wave] float (Integer from 0 - 16, Different Waveform Types)

	_Wave_Types.png shows the waveforms.

Volume:

	[$0-volume] float

	The value is restricted to be between 0 and 1.

Pan Control:

	[$0-pan] float

	The value is restricted to be between 0 and 100.
	0 = Left, 50 = Center, 100 = Right.


ENVELOPE CONTROLS:


ADSR:

	[$0-attack]  float (Time in ms)
	[$0-decay]   float (Time in ms)
	[$0-sustain] float (Sustain Level from 0 - 1)
	[$0-release] float (Time in ms)

	See https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope


///////////////////////////////////////////////////////////////////////////////


AUDIO EFFECTS:

All effects are currently global to all notes.  This will be changed soon.

PRE-GAIN:

	[$0-pregain_on]     1 / 0 (On / Off)
	[$0-pregain_amount] float (Value from 0 - 10)

	Adds gain to the effects chain input. 

RING MODULATOR:

	[$0-ringmod_on]    1 / 0 (On / Off)
	[$0-ringmod_rate]  float (Oscillation speed in Hz)
	[$0-ringmod_depth] float (Value from 0 - 1, Maximum amplitude reduction)

	This plugin multiplies the amplitude of the input signal with a sine wave
	with a frequency == $0-ringmod_rate.  At low values it is equivalent to 
	the tremolo plugin on a sine wave setting.

	At high values you can create Amplitude Modulation.

EQ:  

	[$0-eq_on]	1 / 0 (On / Off)
	[$0-eq_hp]	list{ float float }       ( 1/0 (On/Off), Cutoff Freq (Hz))
	[$0-eq_bp1]	list{ float float float } ( 1/0 (On/Off), Center Freq (Hz), Q)
	[$0-eq_bp2]	list{ float float float } ( 1/0 (On/Off), Center Freq (Hz), Q)
	[$0-eq_bp3]	list{ float float float } ( 1/0 (On/Off), Center Freq (Hz), Q)
	[$0-eq_bp4]	list{ float float float } ( 1/0 (On/Off), Center Freq (Hz), Q)
	[$0-eq_bp5]	list{ float float float } ( 1/0 (On/Off), Center Freq (Hz), Q)
	[$0-eq_bp6]	list{ float float float } ( 1/0 (On/Off), Center Freq (Hz), Q)
	[$0-eq_bp7]	list{ float float float } ( 1/0 (On/Off), Center Freq (Hz), Q)
	[$0-eq_bp8]	list{ float float float } ( 1/0 (On/Off), Center Freq (Hz), Q)
	[$0-eq_lp]	list{ float float }       ( 1/0 (On/Off), Cutoff Freq (Hz))

	The EQ Plugin offers 8 Bandpass Filters, a Highpass, and a Lowpass.
	Each plugin receives a list containing an on/off bit, the main frequency,
	and (if applicable) the Q factor.  

	The Q factor relates to the slope of the filter's attenuation.

	THE EQ DESIGN NEEDS TO BE CHANGED, DON'T USE IT UNTIL THIS HAS BEEN REMOVED

DELAY:

	[$0-delay_on]       1 / 0 (On / Off)
	[$0-delay_time]     float (Time in ms)
	[$0-delay_feedback] float (From 0 - 1, Number of delay taps)

	This is a traditional delay unit like the classic delay guitar pedals.
	It will shift the pitch if the delay time is changed while it is still
	playing.

	Feedback goes from 0 to 1: 0 = No Repetitions, 1 = Infinite Repetitions

CHORUS:
	
	[$0-chorus_on]    1 / 0 (On / Off)
	[$0-chorus_rate]  float (Flutter speed in Hz)
	[$0-chorus_depth] float (Value from 0 - 1, depth of detuning)
	[$0-chorus_mix]   float (Value from 0 - 100)

	3-voice Chorus module.
	The mix is the balance between the original and processed signals.
	50% => equal amounts of both, 100% => processed signal only.

	At high values you can create Frequency Modulation.

TREMOLO:

	[$0-tremolo_on]    1 / 0 (On / Off)
	[$0-tremolo_rate]  float (Speed in Hz)
	[$0-tremolo_depth] float (Value from 0 - 1, Maximum amplitude reduction)
	[$0-tremolo_shape] float (Value from 0 - 3, see below)

	The Tremolo plugin multiplies the amplitude of the input signal with
	a waveform set by $0-tremolo_shape.  Also creates Amplitude Modulation 
	with large rates. 

	Shapes:
			0 - Sine
			1 - Sawtooth (/)
			2 - Sawtooth (\)
			3 - Square

VIBRATO:

	[$0-vibrato_on]    1 / 0 (On / Off)
	[$0-vibrato_rate]  float (Speed in Hz)
	[$0-vibrato_depth] float (Pitch detune, Hz)

	A basic vibrato effect, currently only with sine wave.  Creates Frequency
	Modulation with large rates.

GAIN:

	[$0-gain_on]     1 / 0 (On / Off)
	[$0-gain_amount] float (Value from 0 - 10)

	Adds gain to the output. 
	Useful for quiet sounds.








